-- tabla categor√≠a

CREATE TABLE digitales.categoria
(
  codigo serial NOT NULL,
  nombre character varying(100),
  descripcion character varying(300),
  orden integer,
  estado integer,
  codigo_padre integer NOT NULL,
  CONSTRAINT pk_categoria PRIMARY KEY (codigo)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.categoria
  OWNER TO oscunach;



-- tabla articulo
CREATE TABLE digitales.articulo
(
  codigo serial NOT NULL,
  titulo character varying(100),
  introduccion character varying(300),
  estado integer,
  fecha_registro bigint,
  fecha_edicion bigint,
  codigo_categoria integer,
  codigo_usuario bigint,
  CONSTRAINT pk_articulo PRIMARY KEY (codigo),
  CONSTRAINT fk_categoria_articulo FOREIGN KEY (codigo_categoria)
      REFERENCES digitales.categoria (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_usuario_articulo FOREIGN KEY (codigo_usuario)
      REFERENCES master.usuario (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.articulo
  OWNER TO postgres;

-- documento
CREATE TABLE digitales.documento
(
  codigo serial NOT NULL,
  titulo character varying(100),
  path character varying(300),
  tipo character varying(100),
  keywords character varying(200),
  fecha_registro bigint,
  estado integer,
  codigo_usuario bigint,
  CONSTRAINT pk_documento PRIMARY KEY (codigo),
  CONSTRAINT fk_persona_documento FOREIGN KEY (codigo_usuario)
      REFERENCES master.usuario (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.documento
  OWNER TO postgres;

-- imagen
CREATE TABLE digitales.imagen
(
  codigo serial NOT NULL,
  titulo character varying(100),
  path character varying(300),
  tipo character varying(100),
  keywords character varying(200),
  fecha_registro bigint,
  estado integer,
  codigo_usuario bigint,
  CONSTRAINT pk_imagen PRIMARY KEY (codigo),
  CONSTRAINT fk_persona_imagen FOREIGN KEY (codigo_usuario)
      REFERENCES master.usuario (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.imagen
  OWNER TO postgres;

-- tabla sonido
CREATE TABLE digitales.sonido
(
  codigo serial NOT NULL,
  titulo character varying(100),
  path character varying(300),
  tipo character varying(100),
  keywords character varying(200),
  fecha_registro bigint,
  estado integer,
  codigo_usuario bigint,
  CONSTRAINT pk_sonido PRIMARY KEY (codigo),
  CONSTRAINT fk_persona_sonido FOREIGN KEY (codigo_usuario)
      REFERENCES master.usuario (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.sonido
  OWNER TO postgres;

-- tabla video
CREATE TABLE digitales.video
(
  codigo serial NOT NULL,
  titulo character varying(100),
  path character varying(300),
  tipo character varying(100),
  keywords character varying(200),
  fecha_registro bigint,
  estado integer,
  codigo_usuario bigint,
  CONSTRAINT pk_video PRIMARY KEY (codigo),
  CONSTRAINT fk_persona_video FOREIGN KEY (codigo_usuario)
      REFERENCES master.usuario(codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.video
  OWNER TO postgres;

-- tabla articulo_documento
CREATE TABLE digitales.articulo_documento
(
  codigo serial NOT NULL,
  codigo_articulo integer,
  codigo_documento integer,
  CONSTRAINT pk_articulo_documento PRIMARY KEY (codigo),
  CONSTRAINT fk_articulo_articulo_documento FOREIGN KEY (codigo_articulo)
      REFERENCES digitales.articulo (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_documento_articulo_documento FOREIGN KEY (codigo_documento)
      REFERENCES digitales.documento (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.articulo_documento
  OWNER TO postgres;

-- articulo_imagen

CREATE TABLE digitales.articulo_imagen
(
  codigo serial NOT NULL,
  codigo_articulo integer,
  codigo_imagen integer,
  CONSTRAINT pk_articulo_imagen PRIMARY KEY (codigo),
  CONSTRAINT fk_articulo_articulo_imagen FOREIGN KEY (codigo_articulo)
      REFERENCES digitales.articulo (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_imagen_articulo_imagen FOREIGN KEY (codigo_imagen)
      REFERENCES digitales.imagen (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.articulo_imagen
  OWNER TO postgres;

-- articulo_sonido
CREATE TABLE digitales.articulo_sonido
(
  codigo serial NOT NULL,
  codigo_articulo integer,
  codigo_sonido integer,
  CONSTRAINT pk_articulo_sonido PRIMARY KEY (codigo),
  CONSTRAINT fk_articulo_articulo_sonido FOREIGN KEY (codigo_articulo)
      REFERENCES digitales.articulo (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_sonido_articulo_sonido FOREIGN KEY (codigo_sonido)
      REFERENCES digitales.sonido (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.articulo_sonido
  OWNER TO postgres;

-- tabla texto
CREATE TABLE digitales.texto
(
  codigo serial NOT NULL,
  titulo character varying(100),
  resumen text,
  contenido text,
  keywords character varying(200),
  fecha_registro bigint,
  fecha_edicion bigint,
  estado integer,
  codigo_usuario bigint,
  CONSTRAINT pk_texto PRIMARY KEY (codigo),
  CONSTRAINT fk_persona_texto FOREIGN KEY (codigo_persona)
      REFERENCES master.usuario (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.texto
  OWNER TO postgres;

-- articulo_texto
CREATE TABLE digitales.articulo_texto
(
  codigo serial NOT NULL,
  codigo_articulo integer,
  codigo_texto integer,
  CONSTRAINT pk_articulo_texto PRIMARY KEY (codigo),
  CONSTRAINT fk_articulo_articulo_texto FOREIGN KEY (codigo_articulo)
      REFERENCES digitales.articulo (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_texto_articulo_texto FOREIGN KEY (codigo_texto)
      REFERENCES digitales.texto (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.articulo_texto
  OWNER TO postgres;

-- articulo_video
CREATE TABLE digitales.articulo_video
(
  codigo serial NOT NULL,
  codigo_articulo integer,
  codigo_video integer,
  CONSTRAINT pk_articulo_video PRIMARY KEY (codigo),
  CONSTRAINT fk_articulo_articulo_video FOREIGN KEY (codigo_articulo)
      REFERENCES digitales.articulo (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_video_articulo_video FOREIGN KEY (codigo_video)
      REFERENCES digitales.video (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE digitales.articulo_video
  OWNER TO postgres;
